import type { NextPage } from "next";
import Head from "next/head";
import styles from "../styles/Home.module.css";
import axios from "axios";
// import Image from "next/image";
import { useEffect, useState } from "react";

const CLIENT_ID = "a3c4ca589a054574ad0b6f5758533476";
const REDIRECT_URI = "http://localhost:3000";
const AUTH_ENDPOINT = "https://accounts.spotify.com/authorize";
const RESPONSE_TYPE = "token";
const TOKEN_MISSING = "MISSING_TOKEN";

const Home: NextPage = () => {
  const [token, setToken] = useState<string>("");
  const [searchKey, setSearchKey] = useState("");
  const [artists, setArtists] = useState<any>([]);

  const searchArtists = async (e: any) => {
    e.preventDefault();
    const { data } = await axios.get("https://api.spotify.com/v1/search", {
      headers: {
        Authorization: `Bearer ${token}`,
      },
      params: {
        q: searchKey,
        type: "artist",
      },
    });
    setArtists(data.artists.items);
  };

  const renderArtists = () => {
    return artists.map((artist: any) => (
      <div key={artist.id}>{artist.name}</div>
    ));
  };

  const logout = () => {
    setToken("");
    window.localStorage.removeItem("token");
  };

  useEffect(() => {
    const hash = window.location.hash;
    let token: string | Error | undefined | null =
      window.localStorage.getItem("token");

    if (!token && hash) {
      token = hash
        .substring(1)
        .split("&")
        .find((elem) => elem.startsWith("access_token"))
        ?.split("=")[1];

      if (token) {
        window.location.hash = "";
        window.localStorage.setItem("token", token ?? "");
      }
    }
    setToken(token ?? TOKEN_MISSING);
  }, []);

  return (
    <div className={styles.container}>
      <Head>
        <title>Personalized Playlist Builder</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <header className="App-header">
        <h1>Personalized Playlist Builder</h1>
        {!token ? (
          <a
            href={`${AUTH_ENDPOINT}?client_id=${CLIENT_ID}&redirect_uri=${REDIRECT_URI}&response_type=${RESPONSE_TYPE}`}
          >
            Login to Spotify
          </a>
        ) : (
          <div>
            Your token is {token} <br />
            <button onClick={logout}>Logout</button>
          </div>
        )}
      </header>
      <form onSubmit={searchArtists}>
        <input type="text" onChange={(e) => setSearchKey(e.target.value)} />
        <button type={"submit"}>Search</button>
      </form>
      {renderArtists()}
    </div>
  );
};

export default Home;
